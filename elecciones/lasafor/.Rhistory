# El objeto Workbook de R sirve para carcar un xlsx MS Office 2007 o posterior
# Lo cargamos en la varibel de este tipo wb con la función pertinente
# No comporbamos la existencia del fichero pues se ha creado en el anterior chunk
wb<-loadWorkbook("resultats.xlsx")
# Comprobamos que NO exista la página
if ("resultats" %in% names(wb)) {
# Si la hoja ya existe, elimínala
removeWorksheet(wb, "resultats")
}
# Tras comprobar/borrar que no existe la página, la agregamos
write.xlsx(df_resultats, file="resultats.xlsx", sheetName="resultats", append=TRUE)
names(wb)
# Tras comprobar/borrar que no existe la página, la agregamos
df_resultats
removeWorksheet(wb, "resultats")
names(wb)
wb<-loadWorkbook("resultats.xlsx")
getwd()
setwd("Documents")
setwd("cienciapoliticaygestionpublica/elecciones/lasafor/")
getwd()
wb<-loadWorkbook("resultats.xlsx")
names(wb)
removeWorksheet(wb, "resultats")
names(wb)
write.xlsx(df_resultats, file="resultats.xlsx", sheetName="resultats", append=TRUE)
names(wb)
names(wb)
# El objeto Workbook de R sirve para carcar un xlsx MS Office 2007 o posterior
# Lo cargamos en la varibel de este tipo wb con la función pertinente
# No comporbamos la existencia del fichero pues se ha creado en el anterior chunk
wb<-loadWorkbook("resultats.xlsx")
# Comprobamos que NO exista la página
if ("resultats" %in% names(wb)) {
# Si la hoja ya existe, elimínala
removeWorksheet(wb, "resultats")
}
# Tras comprobar/borrar que no existe la página, la agregamos
write.xlsx(df_resultats, file="resultats.xlsx", sheetName="resultats", append=TRUE)
removeWorksheet(wb, "resultats")
removeWorksheet(wb, "resultats")
write.xlsx(df_resultats, file="resultats.xlsx", sheetName="resultats", append=TRUE)
removeWorksheet(wb, "resultats")
wb<-loadWorkbook("resultats.xlsx")
removeWorksheet(wb, "resultats")
saveWorkbook(wb, overwrite = TRUE)
saveWorkbook(wb, file="resultats.xlsx",overwrite = TRUE)
write.xlsx(df_resultats, file="resultats.xlsx", sheetName="resultats", append=TRUE)
# Si existe lo borramos
if (file.exists("resultats.xlsx")){file.remove("resultats.xlsx")}
# Ahora, lo creamos de nuevo
write.xlsx(df_resultats, file = "resultats.xlsx", sheetName = "resultats", append = FALSE)
# El objeto Workbook de R sirve para carcar un xlsx MS Office 2007 o posterior
# Lo cargamos en la varibel de este tipo wb con la función pertinente
# No comporbamos la existencia del fichero pues se ha creado en el anterior chunk
wb<-loadWorkbook("resultats.xlsx")
# Comprobamos que NO exista la página
if ("resultats" %in% names(wb)) {
# Si la hoja ya existe, elimínala
removeWorksheet(wb, "resultats")
saveWorkbook(wb, file="resultats.xlsx",overwrite = TRUE)
}
# Tras comprobar/borrar que no existe la página, la agregamos
write.xlsx(df_resultats, file="resultats.xlsx", sheetName="resultats", append=TRUE)
# Si existe lo borramos
if (file.exists("resultats.xlsx")){file.remove("resultats.xlsx")}
# Ahora, lo creamos de nuevo
write.xlsx(df_resultats, file = "resultats.xlsx", sheetName = "resultats", append = FALSE)
wb<-loadWorkbook("resultats.xlsx")
bames(wb)
names(wb)
"resultats" %in% names(wb)
removeWorksheet(wb, "resultats")
names(wb)
saveWorkbook(wb, file="resultats.xlsx",overwrite = TRUE)
if ("resultats" %in% names(wb)) {
# Si la hoja existe, se remobra (no se puede borrar, tiene que existir al menos 1)
setWorksheetName(wb, "resultats", "resultatsOLD")
saveWorkbook(wb, file="resultats.xlsx",overwrite = TRUE) #guardamos en disco (fichero)
}
write.xlsx(df_resultats, file="resultats.xlsx", sheetName="resultats", append=TRUE)
# Requisitos previos. Paquetes de librerías
if (!require("dplyr")) {install.packages("dplyr")}
if (!require("stringr")) {install.packages("stringr")}
if (!require("curl")) {install.packages("curl")}
if (!require("rsconnect")){install.packages("rsconnect")}
if (!require("kableExtra")){install.packages("kableExtra")}
if (!require("tidyverse")){install.packages("tidyverse")}
if (!require("tidyverse")){install.packages("openxlsx")}
library(openxlsx)
library(dplyr)
library(data.table)
library(knitr)
library(ggplot2)
df1<-read.csv("CSV/SAFOR.csv",header=TRUE, sep=",",quote="\"'", dec=",",fill=TRUE,
comment.char = "")
# View(df1) # Para ver en consola
head(df1)
df_autonomicas<-df1 %>% filter(str_detect(df1$Elecció,"A-"))
head(df_autonomicas,3)
tail(df_autonomicas,2)
df_autonomicas[is.na(df_autonomicas)]<-0
#kable es una función del paquete knitr que permite formatear tablas. Existen más alternativa
kable(df_autonomicas, caption = "ELECCIONES AUTONÓMICAS EN LA SAFOR")
# Recogemos los nombres de columnas a partir de la 4ª columna
partits<-names(df1[4:length(df1)])
# Para nuestro caso podríamos anotarlo directamente al ser 8 valores
# partits<-c("PP","PSPV","COMPROMÍS","VOX","PODEMOS","Cs","EUPV","RESTA")
kable(partits, caption = "CANDIDATURAS")
mitjana<-summarise_at(df_autonomicas,partits,min)
maxims<-summarise_at(df_autonomicas,partits,max)
minims<-summarise_at(df_autonomicas,partits,~min(.[. != 0])) #Descartamos los 0
rangodevariacion<-maxims - minims
df_resultats<-rbind(mitjana)
df_resultats<-rbind(df_resultats,maxims)
df_resultats<-rbind(df_resultats,minims)
df_resultats<-rbind(df_resultats,rangodevariacion)
#Redondeamos los valores a enteros ( son votos)
df_resultats<-df_resultats %>% mutate_at(partits, as.integer)
df_resultats<-cbind(df_resultats,ESTADÍSTICA=c("MEDIA","MÁXIMO","MÍNIMO","RANGO"))
# la resituamos en la posición 1 ( estática)
df_resultats<-df_resultats %>% select("ESTADÍSTICA",everything())
df_resultats <- df_resultats[,-length(df_resultats)]
knitr::kable(df_resultats, caption = "ESTADÍSTICA SAFOR")
# Recorremos las columnas del data frame correspondientes a candidaturas ( >2)
# Creamos un data frame en cada iteración
for ( i in 2:length(df_resultats)){
df_estPartit<- data.frame(
ESTADÍSTICA=df_resultats$ESTADÍSTICA,
VALORS=df_resultats[,i],
PARTIT=colnames(df_resultats[i])
)
# EN UN GRAFICO
barplot(df_estPartit$VALORS,
main=paste("Valores estadísticos de",df_estPartit$PARTIT[1]),
names.arg=df_estPartit$ESTADÍSTICA,
col=c("#5fe10b","red","#48b7f7","#ede12e"),
ylab="VOTOS")
# EN UNA TABLA
#Quitamos la columna que repite el nombre ( estético), lo guardamos antes
candidatura<-df_estPartit$PARTIT[1]
df_estPartit <- df_estPartit[, !(names(df_estPartit) %in% "PARTIT")]
knitr::kable(df_estPartit, caption = paste( "ESTADÍSTICA SAFOR",
candidatura )) %>% print()
}
if (!require("xlsx")) {install.packages("xlsx")}
# Si existe lo borramos
if (file.exists("resultats.xlsx")){file.remove("resultats.xlsx")}
# Ahora, lo creamos de nuevo
write.xlsx(df_resultats, file = "resultats.xlsx", sheetName = "resultats", append = FALSE)
# El objeto Workbook de R sirve para carcar un xlsx MS Office 2007 o posterior
# Lo cargamos en la varibel de este tipo wb con la función pertinente
# No comporbamos la existencia del fichero pues se ha creado en el anterior chunk
wb<-loadWorkbook("resultats.xlsx")
# Comprobamos que NO exista la página
if ("resultats" %in% names(wb)) {
# Si la hoja existe, se remobra (no se puede borrar, tiene que existir al menos 1)
setWorksheetName(wb, "resultats", "resultatsOLD")
saveWorkbook(wb, file="resultats.xlsx",overwrite = TRUE) #guardamos en disco (fichero)
}
setWorksheetName(wb, "resultats", "resultatsOLD")
library(openxlsx)
setWorksheetName(wb, "resultats", "resultatsOLD")
renameWorksheet(wb, "resultats", "resultatsOLD")
renameWorksheet(wb, "resultats", "resultatsOLD")
setWorksheetName(wb, "resultats", "resultatsOLD")
renameWorksheet(wb, "resultats", "resultatsOLD")
library(openxlsx)
renameWorksheet(wb, "resultats", "resultatsOLD")
RenameWorksheet(wb, "resultats", "resultatsOLD")
renameWorksheet(wb, "resultats", "resultatsOLD")
wb
names(wb)
saveWorkbook(wb, file="resultats.xlsx",overwrite = TRUE)
names(wb)
write.xlsx(df_resultats, file="resultats.xlsx", sheetName="resultats1", append=TRUE)
# El objeto Workbook de R sirve para carcar un xlsx MS Office 2007 o posterior
# Lo cargamos en la varibel de este tipo wb con la función pertinente
# No comporbamos la existencia del fichero pues se ha creado en el anterior chunk
wb<-loadWorkbook("resultats.xlsx")
# Comprobamos que NO exista la página
if ("resultats" %in% names(wb)) {
# Si la hoja existe, se remobra (no se puede borrar, tiene que existir al menos 1)
renameWorksheet(wb, "resultats", "resultatsOLD")
saveWorkbook(wb, file="resultats.xlsx",overwrite = TRUE) #guardamos en disco (fichero)
}
write.xlsx(df_resultats, file="resultats.xlsx", sheetName="resultats", append=TRUE)
# Si existe lo borramos
if (file.exists("resultats.xlsx")){file.remove("resultats.xlsx")}
# Ahora, lo creamos de nuevo
write.xlsx(df_resultats, file = "resultats.xlsx", sheetName = "resultats", append = FALSE)
wb<-loadWorkbook("resultats.xlsx")
names(wb)
"resultats" %in% names(wb)
if ("resultats" %in% names(wb)) {
# Si la hoja existe, se remobra (no se puede borrar, tiene que existir al menos 1)
renameWorksheet(wb, "resultats", "resultatsOLD")
saveWorkbook(wb, file="resultats.xlsx",overwrite = TRUE) #guardamos en disco (fichero)
}
names(wb)
write.xlsx(df_resultats, file="resultats.xlsx", sheetName="resultats", append=TRUE)
rm(wb)
# Requisitos previos. Paquetes de librerías
if (!require("dplyr")) {install.packages("dplyr")}
if (!require("stringr")) {install.packages("stringr")}
if (!require("curl")) {install.packages("curl")}
if (!require("rsconnect")){install.packages("rsconnect")}
if (!require("kableExtra")){install.packages("kableExtra")}
if (!require("tidyverse")){install.packages("tidyverse")}
if (!require("tidyverse")){install.packages("openxlsx")}
library(openxlsx)
library(dplyr)
library(data.table)
library(knitr)
library(ggplot2)
df1<-read.csv("CSV/SAFOR.csv",header=TRUE, sep=",",quote="\"'", dec=",",fill=TRUE,
comment.char = "")
# View(df1) # Para ver en consola
head(df1)
df_autonomicas<-df1 %>% filter(str_detect(df1$Elecció,"A-"))
head(df_autonomicas,3)
tail(df_autonomicas,2)
df_autonomicas[is.na(df_autonomicas)]<-0
#kable es una función del paquete knitr que permite formatear tablas. Existen más alternativa
kable(df_autonomicas, caption = "ELECCIONES AUTONÓMICAS EN LA SAFOR")
# Recogemos los nombres de columnas a partir de la 4ª columna
partits<-names(df1[4:length(df1)])
# Para nuestro caso podríamos anotarlo directamente al ser 8 valores
# partits<-c("PP","PSPV","COMPROMÍS","VOX","PODEMOS","Cs","EUPV","RESTA")
kable(partits, caption = "CANDIDATURAS")
mitjana<-summarise_at(df_autonomicas,partits,min)
maxims<-summarise_at(df_autonomicas,partits,max)
minims<-summarise_at(df_autonomicas,partits,~min(.[. != 0])) #Descartamos los 0
rangodevariacion<-maxims - minims
df_resultats<-rbind(mitjana)
df_resultats<-rbind(df_resultats,maxims)
df_resultats<-rbind(df_resultats,minims)
df_resultats<-rbind(df_resultats,rangodevariacion)
#Redondeamos los valores a enteros ( son votos)
df_resultats<-df_resultats %>% mutate_at(partits, as.integer)
df_resultats<-cbind(df_resultats,ESTADÍSTICA=c("MEDIA","MÁXIMO","MÍNIMO","RANGO"))
# la resituamos en la posición 1 ( estática)
df_resultats<-df_resultats %>% select("ESTADÍSTICA",everything())
df_resultats <- df_resultats[,-length(df_resultats)]
knitr::kable(df_resultats, caption = "ESTADÍSTICA SAFOR")
# Recorremos las columnas del data frame correspondientes a candidaturas ( >2)
# Creamos un data frame en cada iteración
for ( i in 2:length(df_resultats)){
df_estPartit<- data.frame(
ESTADÍSTICA=df_resultats$ESTADÍSTICA,
VALORS=df_resultats[,i],
PARTIT=colnames(df_resultats[i])
)
# EN UN GRAFICO
barplot(df_estPartit$VALORS,
main=paste("Valores estadísticos de",df_estPartit$PARTIT[1]),
names.arg=df_estPartit$ESTADÍSTICA,
col=c("#5fe10b","red","#48b7f7","#ede12e"),
ylab="VOTOS")
# EN UNA TABLA
#Quitamos la columna que repite el nombre ( estético), lo guardamos antes
candidatura<-df_estPartit$PARTIT[1]
df_estPartit <- df_estPartit[, !(names(df_estPartit) %in% "PARTIT")]
knitr::kable(df_estPartit, caption = paste( "ESTADÍSTICA SAFOR",
candidatura )) %>% print()
}
if (!require("xlsx")) {install.packages("xlsx")}
# Si existe lo borramos
if (file.exists("resultats.xlsx")){file.remove("resultats.xlsx")}
# Ahora, lo creamos de nuevo
write.xlsx(df_resultats, file = "resultats.xlsx", sheetName = "resultats", append = FALSE)
# El objeto Workbook de R sirve para carcar un xlsx MS Office 2007 o posterior
# Lo cargamos en la varibel de este tipo wb con la función pertinente
# No comporbamos la existencia del fichero pues se ha creado en el anterior chunk
wb<-loadWorkbook("resultats.xlsx")
# Comprobamos que NO exista la página
if ("resultats" %in% names(wb)) {
# Si la hoja existe, se remobra (no se puede borrar, tiene que existir al menos 1)
renameWorksheet(wb, "resultats", "resultatsOLD")
saveWorkbook(wb, file="resultats.xlsx",overwrite = TRUE) #guardamos en disco (fichero)
}
write.xlsx(df_resultats, file="resultats.xlsx", sheetName="resultats", append=TRUE)
rm(wb)
if (!require("foreign")) {install.packages("foreign")}
write.dta(df_resultats, "resultats.dta")
if (!require("foreign")) {install.packages("foreign")}
write.dta(df_resultats, "resultats.dta")
if (!require("tidyverse")) {install.packages("tidyverse")}
write_csv(df_resultats, "resultats.csv")
if (!require("tidyverse")) {install.packages("tidyverse")}
write_csv(df_resultats, "resultats.csv")
if (!require("haven")) {install.packages("haven")}
write_sav(df_resultats, "resultats.sav")
save(df_resultats, file="resultats.RData")
load("resultats.RData",verbose=TRUE)
saveRDS(df_resultats, "resultats.rds")
df_resultats2 <- readRDS("resultats.rds")
# Requisitos previos. Paquetes de librerías
if (!require("dplyr")) {install.packages("dplyr")}
if (!require("stringr")) {install.packages("stringr")}
if (!require("curl")) {install.packages("curl")}
if (!require("rsconnect")){install.packages("rsconnect")}
if (!require("kableExtra")){install.packages("kableExtra")}
if (!require("tidyverse")){install.packages("tidyverse")}
if (!require("tidyverse")){install.packages("openxlsx")}
library(openxlsx)
library(dplyr)
library(data.table)
library(knitr)
library(ggplot2)
df1<-read.csv("CSV/SAFOR.csv",header=TRUE, sep=",",quote="\"'", dec=",",fill=TRUE,
comment.char = "")
# View(df1) # Para ver en consola
head(df1)
df_autonomicas<-df1 %>% filter(str_detect(df1$Elecció,"A-"))
head(df_autonomicas,3)
tail(df_autonomicas,2)
df_autonomicas[is.na(df_autonomicas)]<-0
#kable es una función del paquete knitr que permite formatear tablas. Existen más alternativa
kable(df_autonomicas, caption = "ELECCIONES AUTONÓMICAS EN LA SAFOR")
# Recogemos los nombres de columnas a partir de la 4ª columna
partits<-names(df1[4:length(df1)])
# Para nuestro caso podríamos anotarlo directamente al ser 8 valores
# partits<-c("PP","PSPV","COMPROMÍS","VOX","PODEMOS","Cs","EUPV","RESTA")
kable(partits, caption = "CANDIDATURAS")
mitjana<-summarise_at(df_autonomicas,partits,min)
maxims<-summarise_at(df_autonomicas,partits,max)
minims<-summarise_at(df_autonomicas,partits,~min(.[. != 0])) #Descartamos los 0
rangodevariacion<-maxims - minims
df_resultats<-rbind(mitjana)
df_resultats<-rbind(df_resultats,maxims)
df_resultats<-rbind(df_resultats,minims)
df_resultats<-rbind(df_resultats,rangodevariacion)
#Redondeamos los valores a enteros ( son votos)
df_resultats<-df_resultats %>% mutate_at(partits, as.integer)
df_resultats<-cbind(df_resultats,ESTADÍSTICA=c("MEDIA","MÁXIMO","MÍNIMO","RANGO"))
# la resituamos en la posición 1 ( estática)
df_resultats<-df_resultats %>% select("ESTADÍSTICA",everything())
df_resultats <- df_resultats[,-length(df_resultats)]
knitr::kable(df_resultats, caption = "ESTADÍSTICA SAFOR")
# Recorremos las columnas del data frame correspondientes a candidaturas ( >2)
# Creamos un data frame en cada iteración
for ( i in 2:length(df_resultats)){
df_estPartit<- data.frame(
ESTADÍSTICA=df_resultats$ESTADÍSTICA,
VALORS=df_resultats[,i],
PARTIT=colnames(df_resultats[i])
)
# EN UN GRAFICO
barplot(df_estPartit$VALORS,
main=paste("Valores estadísticos de",df_estPartit$PARTIT[1]),
names.arg=df_estPartit$ESTADÍSTICA,
col=c("#5fe10b","red","#48b7f7","#ede12e"),
ylab="VOTOS")
# EN UNA TABLA
#Quitamos la columna que repite el nombre ( estético), lo guardamos antes
candidatura<-df_estPartit$PARTIT[1]
df_estPartit <- df_estPartit[, !(names(df_estPartit) %in% "PARTIT")]
knitr::kable(df_estPartit, caption = paste( "ESTADÍSTICA SAFOR",
candidatura )) %>% print()
}
if (!require("xlsx")) {install.packages("xlsx")}
# Si existe lo borramos
if (file.exists("resultats.xlsx")){file.remove("resultats.xlsx")}
# Ahora, lo creamos de nuevo
write.xlsx(df_resultats, file = "resultats.xlsx", sheetName = "resultats", append = FALSE)
# El objeto Workbook de R sirve para carcar un xlsx MS Office 2007 o posterior
# Lo cargamos en la varibel de este tipo wb con la función pertinente
# No comporbamos la existencia del fichero pues se ha creado en el anterior chunk
wb<-loadWorkbook("resultats.xlsx")
# Comprobamos que NO exista la página
if ("resultats" %in% names(wb)) {
# Si la hoja existe, se remobra (no se puede borrar, tiene que existir al menos 1)
renameWorksheet(wb, "resultats", "resultatsOLD")
saveWorkbook(wb, file="resultats.xlsx",overwrite = TRUE) #guardamos en disco (fichero)
}
write.xlsx(df_resultats, file="resultats.xlsx", sheetName="resultats", append=TRUE)
rm(wb)
if (!require("foreign")) {install.packages("foreign")}
write.dta(df_resultats, "resultats.dta")
if (!require("foreign")) {install.packages("foreign")}
write.dta(df_resultats, "resultats.dta")
if (!require("tidyverse")) {install.packages("tidyverse")}
write_csv(df_resultats, "resultats.csv")
if (!require("tidyverse")) {install.packages("tidyverse")}
write_csv(df_resultats, "resultats.csv")
if (!require("haven")) {install.packages("haven")}
write_sav(df_resultats, "resultats.sav")
save(df_resultats, file="resultats.RData")
load("resultats.RData",verbose=TRUE)
saveRDS(df_resultats, "resultats.rds")
df_resultats2 <- readRDS("resultats.rds")
rm(list = ls())
renameWorksheet(wb, "resultats", "resultatsOLD")
wb<-loadWorkbook("resultats.xlsx")
renameWorksheet(wb, "resultats", "resultatsOLD")
# Requisitos previos. Paquetes de librerías
if (!require("dplyr")) {install.packages("dplyr")}
if (!require("stringr")) {install.packages("stringr")}
if (!require("curl")) {install.packages("curl")}
if (!require("rsconnect")){install.packages("rsconnect")}
if (!require("kableExtra")){install.packages("kableExtra")}
if (!require("tidyverse")){install.packages("tidyverse")}
if (!require("tidyverse")){install.packages("openxlsx")}
library(openxlsx)
library(dplyr)
library(data.table)
library(knitr)
library(ggplot2)
df1<-read.csv("CSV/SAFOR.csv",header=TRUE, sep=",",quote="\"'", dec=",",fill=TRUE,
comment.char = "")
# View(df1) # Para ver en consola
head(df1)
df_autonomicas<-df1 %>% filter(str_detect(df1$Elecció,"A-"))
head(df_autonomicas,3)
tail(df_autonomicas,2)
df_autonomicas[is.na(df_autonomicas)]<-0
#kable es una función del paquete knitr que permite formatear tablas. Existen más alternativa
kable(df_autonomicas, caption = "ELECCIONES AUTONÓMICAS EN LA SAFOR")
# Recogemos los nombres de columnas a partir de la 4ª columna
partits<-names(df1[4:length(df1)])
# Para nuestro caso podríamos anotarlo directamente al ser 8 valores
# partits<-c("PP","PSPV","COMPROMÍS","VOX","PODEMOS","Cs","EUPV","RESTA")
kable(partits, caption = "CANDIDATURAS")
mitjana<-summarise_at(df_autonomicas,partits,min)
maxims<-summarise_at(df_autonomicas,partits,max)
minims<-summarise_at(df_autonomicas,partits,~min(.[. != 0])) #Descartamos los 0
rangodevariacion<-maxims - minims
df_resultats<-rbind(mitjana)
df_resultats<-rbind(df_resultats,maxims)
df_resultats<-rbind(df_resultats,minims)
df_resultats<-rbind(df_resultats,rangodevariacion)
#Redondeamos los valores a enteros ( son votos)
df_resultats<-df_resultats %>% mutate_at(partits, as.integer)
df_resultats<-cbind(df_resultats,ESTADÍSTICA=c("MEDIA","MÁXIMO","MÍNIMO","RANGO"))
# la resituamos en la posición 1 ( estática)
df_resultats<-df_resultats %>% select("ESTADÍSTICA",everything())
df_resultats <- df_resultats[,-length(df_resultats)]
knitr::kable(df_resultats, caption = "ESTADÍSTICA SAFOR")
# Recorremos las columnas del data frame correspondientes a candidaturas ( >2)
# Creamos un data frame en cada iteración
for ( i in 2:length(df_resultats)){
df_estPartit<- data.frame(
ESTADÍSTICA=df_resultats$ESTADÍSTICA,
VALORS=df_resultats[,i],
PARTIT=colnames(df_resultats[i])
)
# EN UN GRAFICO
barplot(df_estPartit$VALORS,
main=paste("Valores estadísticos de",df_estPartit$PARTIT[1]),
names.arg=df_estPartit$ESTADÍSTICA,
col=c("#5fe10b","red","#48b7f7","#ede12e"),
ylab="VOTOS")
# EN UNA TABLA
#Quitamos la columna que repite el nombre ( estético), lo guardamos antes
candidatura<-df_estPartit$PARTIT[1]
df_estPartit <- df_estPartit[, !(names(df_estPartit) %in% "PARTIT")]
knitr::kable(df_estPartit, caption = paste( "ESTADÍSTICA SAFOR",
candidatura )) %>% print()
}
if (!require("xlsx")) {install.packages("xlsx")}
# Si existe lo borramos
if (file.exists("resultats.xlsx")){file.remove("resultats.xlsx")}
# Ahora, lo creamos de nuevo
write.xlsx(df_resultats, file = "resultats.xlsx", sheetName = "resultats", append = FALSE)
# El objeto Workbook de R sirve para carcar un xlsx MS Office 2007 o posterior
# Lo cargamos en la varibel de este tipo wb con la función pertinente
# No comporbamos la existencia del fichero pues se ha creado en el anterior chunk
wb<-loadWorkbook("resultats.xlsx")
# Comprobamos que NO exista la página
if ("resultats" %in% names(wb)) {
# Si la hoja existe, se remobra (no se puede borrar, tiene que existir al menos 1)
renameWorksheet(wb, "resultats", "resultatsOLD")
}
# write.xlsx(df_resultats, file="resultats.xlsx", sheetName="resultats1", append=TRUE)
addWorksheet(wb, "resultats")
writeData(wb, sheet = "resultats", x = df_resultats)
saveWorkbook(wb, file="resultats.xlsx",overwrite = TRUE) #guardamos en disco (fichero)
rm(wb)
if (!require("foreign")) {install.packages("foreign")}
write.dta(df_resultats, "resultats.dta")
if (!require("foreign")) {install.packages("foreign")}
write.dta(df_resultats, "resultats.dta")
if (!require("tidyverse")) {install.packages("tidyverse")}
write_csv(df_resultats, "resultats.csv")
if (!require("tidyverse")) {install.packages("tidyverse")}
write_csv(df_resultats, "resultats.csv")
if (!require("haven")) {install.packages("haven")}
write_sav(df_resultats, "resultats.sav")
save(df_resultats, file="resultats.RData")
load("resultats.RData",verbose=TRUE)
saveRDS(df_resultats, "resultats.rds")
df_resultats2 <- readRDS("resultats.rds")
class(wb)
wb<-loadWorkbook("resultats.xlsx")
class(wb)
# El objeto Workbook de R sirve para carcar un xlsx MS Office 2007 o posterior
# Lo cargamos en la varibel de este tipo wb con la función pertinente
# No comporbamos la existencia del fichero pues se ha creado en el anterior chunk
wb<-loadWorkbook("resultats.xlsx")
# Comprobamos que NO exista la página
if ("resultats" %in% names(wb)) {
# Si la hoja existe, se remobra (no se puede borrar, tiene que existir al menos 1)
renameWorksheet(wb, "resultats", "resultatsOLD")
}
# write.xlsx(df_resultats, file="resultats.xlsx", sheetName="resultats1", append=TRUE)
addWorksheet(wb, "resultats")
writeData(wb, sheet = "resultats", x = df_resultats)
saveWorkbook(wb, file="resultats.xlsx",overwrite = TRUE) #guardamos en disco (fichero)
# file= nombre del fichero hoja de cálculo de MSOffice
write.xlsx(grafico, file = "DATOS/tablafrecResultado.xlsx",
sheetName = "prefpte2", append = TRUE)
